
name: Kernel Build CI

on:
  push:

env:
  BOT_MSG_URL: ${{ secrets.TG_BOT_MSG_URL }}
  CHAT_ID: ${{ secrets.TG_CHAT_ID }}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  bot-notify-ci:
    runs-on: ubuntu-latest

    steps:
    - name: Send message
      run: curl -s -X POST ${{ env.BOT_MSG_URL }} -d chat_id=${{ env.CHAT_ID }} -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="CI kernel build triggered for <b>Alioth and Elish</b>"

  build-alioth:

    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-xiaomi-4.19 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
    - name: Build alioth
      run: BUILD_CONFIG=kernel/msm-4.19/build.config.xiaomi.alioth COMPILER=gcc BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/android-4.19-stable/dist/Image ak3/
        cat out/android-4.19-stable/dist/*.dtb > ak3/dtb
        cp out/android-4.19-stable/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-alioth-$(/bin/date -u '+%d%m%Y%I%M').zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-alioth-nosdcardfs:

    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-xiaomi-4.19 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
    - name: Build alioth
      run: BUILD_CONFIG=kernel/msm-4.19/build.config.xiaomi.alioth COMPILER=gcc SDCARDFS=0 BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/android-4.19-stable/dist/Image ak3/
        cat out/android-4.19-stable/dist/*.dtb > ak3/dtb
        cp out/android-4.19-stable/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-alioth-es-$(/bin/date -u '+%d%m%Y%I%M').zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  build-elish:

    runs-on: ubuntu-latest

    steps:
    - name: Setup repo
      run: sudo apt update -y && sudo apt install -y repo elfutils
    - name: Repo sync
      run: |
        repo init -u https://github.com/mvaisakh/android_kernel_manifest -b eva-xiaomi-4.19 --depth=1
        repo sync --no-tags --no-clone-bundle -j$(nproc --all)
        sed -i s/build-user/mvaisakh/g build/_setup_env.sh
        sed -i s/build-host/statixos/g build/_setup_env.sh
    - name: Build elish
      run: BUILD_CONFIG=kernel/msm-4.19/build.config.xiaomi.elish COMPILER=gcc BUILD_KERNEL=1 build/build.sh
    - name: Create zip
      run: |
        cp out/android-4.19-stable/dist/Image ak3/
        cat out/android-4.19-stable/dist/*.dtb > ak3/dtb
        cp out/android-4.19-stable/dist/dtbo.img ak3/
        cd ak3/ && zip -r9 eva-elish-$(/bin/date -u '+%d%m%Y%I%M').zip * -x .git README.md ./*/placeholder
        cd ../
    - uses: actions/upload-artifact@main
      with:
       name: release-zip
       path: ak3/*.zip

  publish-release:
    needs: [build-alioth,build-alioth-nosdcardfs,build-elish]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Restoring artifacts
      uses: actions/download-artifact@main
      with:
        name: release-zip
        path: ${{ github.workspace }}
    - name: Release Tag
      id: release_tag
      run: echo "TAG_NAME=$(date -u +%d%m%Y%I%M)" >> $GITHUB_ENV
    - name: Create Release
      run: gh release create ${{ env.TAG_NAME }} --generate-notes -p *.zip
    - name: Release notify
      run: |
        gh release list -L 1 > list
        gh release view $(cat list | awk '{ print substr( $0, 1, length($0)-45 ) }') > release-text
        curl -s -X POST ${{ env.BOT_MSG_URL }} -d chat_id=${{ env.CHAT_ID }} -d "disable_web_page_preview=true" -d "parse_mode=html" -d text="<b>New build for Xiaomi SM8250</b> %0A$(cat release-text | sed '1d;3d;4d;6d;7d;9d;10d;11d;12d;13d;14d;15d;16d;17d;18d;19d;20d;21d;')"
